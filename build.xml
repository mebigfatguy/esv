<project name="esv" default="jar" basedir="." xmlns:yank="antlib:com.mebigfatguy.yank">
    
	<property file="version.properties" />
    <property file="user.properties" />
    <property file="build.properties" />
    
    <property name="src.dir" value="${basedir}/src" />
	<property name="target.dir" value="${basedir}/target" />
    <property name="classes.dir" value="${target.dir}/classes" />
	<property name="lib.dir" value="${basedir}/lib" />
    <property name="javadoc.dir" value="${target.dir}/javadoc" />
    <property name="javac.source" value="1.7" />
    <property name="javac.target" value="1.7" />
    <property name="javac.deprecation" value="on" />
    <property name="javac.debug" value="on" />
    <property name="esv.version" value="0.1.0" />
    <property name="sonatype.dir" value="${user.home}/.esv-${esv.version}-sonatype" />

    <path id="esv.classpath">
        <pathelement location="${classes.dir}"/>
    	<pathelement location="${lib.dir}/jmf-${jmf.version}.jar" />
    </path>
        
    <target name="init" depends="yank">
        <mkdir dir="${target.dir}"/>
        <mkdir dir="${classes.dir}"/>
    </target>
        
    <target name="clean">
        <delete dir="${target.dir}"/>
    </target>
	
   <target name="yank" unless="no.yank" xmlns:yank="antlib:com.mebigfatguy.yank">
        <mkdir dir="${lib.dir}" />
        <yank:yank yankFile="${basedir}/yank.xls" destination="${lib.dir}" source="true">
            <server url="http://repo1.maven.org/maven2" />
            <generateVersions propertyFileName="${basedir}/version.properties" />
        </yank:yank>
    </target>
        
    <target name="compile" depends="init">
        <javac srcdir="${src.dir}" destdir="${classes.dir}" source="${javac.source}" target="${javac.target}" deprecation="${javac.deprecation}" debug="${javac.debug}" includeantruntime="false">
            <classpath refid="esv.classpath" />
        </javac>
    </target>
    
    <target name="jar" depends="init,compile">
        <jar destfile="${target.dir}/esv-${esv.version}.jar">
            <fileset dir="${classes.dir}">
                <include name="**/*.class" />
            </fileset>
            <manifest>
                <attribute name="esv-version" value="${esv.version}" />
                <attribute name="Main-Class" value="com.mebigfatguy.esv.ESV" />
                <attribute name="Application-Name" value="esv" />
                <attribute name="Permissions" value="all-permissions" />
                <attribute name="Codebase" value="*" />
                <attribute name="Bundle-ManifestVersion" value="2" />
                <attribute name="Bundle-Name" value="esv" />
                <attribute name="Bundle-SymbolicName" value="esv; singleton:=true" />
                <attribute name="Bundle-Version" value="${esv.version}" />
                <attribute name="Bundle-ClassPath" value="." />
                <attribute name="Bundle-Vendor" value="esv Project" />
                <attribute name="Bundle-ActivationPolicy" value="lazy" />
                <attribute name="Export-Package" value="com.mebigfatguy.esv" />
            </manifest>
        </jar>
    </target>
    
    <target name="run" depends="jar">
        <java classname="com.mebigfatguy.esv.ESV" fork="true" classpathref="esv.classpath"/>
    </target>
    
    <target name="srczip" description="builds the source distribution zip file">
        <zip destfile="${target.dir}/esv-${esv.version}-sources.jar">
            <fileset dir="${basedir}">
                <include name="**/*.java"/>
                <include name="**/*.pom"/>
                <include name="**/LICENSE"/>
                <include name="**/README.md"/>
            </fileset>
        </zip>
    </target>

    <target name="javadoc" depends="init" description="build the javadoc for the project">
        <javadoc packagenames="com.mebigfatguy.*"
                 sourcepath="${src.dir}"
                 classpathref="esv.classpath"
                 destdir="${javadoc.dir}"
                 windowtitle="esv api">
            <doctitle><![CDATA[<h1>esv javadoc</h1>]]></doctitle>
            <bottom><![CDATA[<i>Copyright &#169; 2013 MeBigFatGuy.com. All Rights Reserved.</i>]]></bottom>
        </javadoc>
    </target>
    
    <target name="release" depends="jar, srczip, javadoc" description="prepares everything for a release"/>
    
    <target name="sonatype" depends="release" description="prepare an artifact bundle for sonatype">
        <mkdir dir="${sonatype.dir}"/>
        <copy todir="${sonatype.dir}" file="${basedir}/esv-${esv.version}.jar"/>
        <copy tofile="${sonatype.dir}/esv-${esv.version}-sources.jar" file="${basedir}/esv-${esv.version}-sources.jar"/>
        <jar destfile="${sonatype.dir}/esv-${esv.version}-javadoc.jar" basedir="${basedir}" includes="javadoc/**"/>
        <copy tofile="${sonatype.dir}/esv-${esv.version}.pom" file="${basedir}/pom.xml"/>
        
        <exec executable="gpg">
            <arg value="-abi" />
            <arg value="${sonatype.dir}/esv-${esv.version}.jar" />
        </exec>
        <exec executable="gpg">
            <arg value="-abi" />
            <arg value="${sonatype.dir}/esv-${esv.version}.pom" />
        </exec>
        <exec executable="gpg">
            <arg value="-abi" />
            <arg value="${sonatype.dir}/esv-${esv.version}-sources.jar" />
        </exec>        
        <exec executable="gpg">
            <arg value="-abi" />
            <arg value="${sonatype.dir}/esv-${esv.version}-javadoc.jar" />
        </exec>
        <jar destfile="${sonatype.dir}/bundle.jar" basedir="${sonatype.dir}" includes="esv*">
        </jar>
        <echo message="" />
        <echo message="" />
        <echo message="====================================================================================================================================" />
        <echo message="sonatype update bundle produced at ${sonatype.dir}/bundle.jar" />
        <echo message="upload this jar at https://oss.sonatype.org" />
        <echo message="" />
        <echo message="see link for details-> https://docs.sonatype.org/display/Repository/Uploading+3rd-party+Artifacts+to+The+Central+Repository" />
        <echo message="====================================================================================================================================" />
    </target>
    
</project>